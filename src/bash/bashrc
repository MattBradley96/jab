#! /bin/bash -x

lcolour () {
    local colour_="[1;${1}m" no_colour_="[0m"
    local text_="$@"
    printf "$colour_$text_$no_colour_"
}

lred () {
    lcolour 31 "$@"
}

lgreen () {
    lcolour 32 "$@"
}

lblue () {
    lcolour 34 "$@"
}

lwhite () {
    lcolour 37 "$@"
}

lred_user () {
    local _colour_username=$(lblue "${USER:-$(whoami)}")
    local _colour_host=$(lred ${HOSTNAME:-$(hostname -s)})
    echo "${_colour_username}@$_colour_host"
}

home_user=$HOME/jab
pre_bashrc_ () {
    local homes_=$home_user/bin:$HOME/bin:$HOME/.local local_=/usr/local
    local locals_="$local_/gnu:$local_/bin:$local_/go/bin"
    local bins_=/usr/bin:/bin:/usr/sbin:/sbin
    local mysite_=/Users/jab/jab/src/python/site/

    local all_="$homes_:$locals_:$bins_"
    PATH=$all_; export PATH
    PYTHONPATH=$mysite_:$PYTHONPATH;

    if test -d $HOME/lib -a -n "$(find $HOME/lib -maxdepth 1 -name 'libpython*' -print -quit)"; then
        export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$HOME/lib
    fi
    . ~/.aliases optional
    . ~/.functions optional
}

# set -x

export home_user_=~/jab

bashrc_ () {
#   set -x
    export PS1="\$? [$(lred_user)@\h:\$PWD]\n$ "
    local init_=$home_user_/__init__.sh
    if [[ -f $init_ ]]; then
        # echo "PATH is $(echo $PATH | sed -e "s,:,:    ,g" | tr ':' '\n')"
        # echo "PSI is $PS1"
        # echo "Here is $(readlink -f .)"
        source $init_
        sp green
        echo "PATH is $(echo $PATH | sed -e "s,:,:    ,g" | tr ':' '\n')"
        # echo "PSI is $PS1"
        echo "Here is $(readlink -f .)"
    fi
    # set +x
    # set -x
    # /usr/bin/say -v Anna Ich mÃ¶chte eine Maschine, die schreiben kann, wie ich kann &
}

BASHRC_LOG=~/log/bashrc.log
vbb () {
    # set -x
    local _log=
    test -f $BASHRC_LOG && _log=$BASHRC_LOG
    (
        cd $home_user
        local local__=
        test -f local/__init__.sh && local__=local/__init__.sh
        vim -p ~/.bashrc __init__.sh environ.d/__init__.sh src/bash/__init__.sh $local__ ~/.vimrc $_log "$@"
        readlink -f ~/.bashrc __init__.sh environ.d/__init__.sh src/bash/__init__.sh $local__ ~/.vimrc $_log
    )
    [[ -f $_log ]] && mv $_log ~/log 2>/dev/null
}

vbl () {
    # set -x
    [[ -f $BASHRC_LOG ]] || return 1
    vim $BASHRC_LOG
}

log_main () {
    set -x
    [[ $- =~ i ]] && main > $BASHRC_LOG 2>&1
    set +x
}

post_bashrc_ () {
    # set +x
    . $home_user/local/__init__.sh optional
    # set -x
}

main () {
    # set -x
    [[ $- =~ i ]] || return
    pre_bashrc_
    bashrc_ $home_user
    post_bashrc_
    set +m
}

# echo bashrc
main  "$@"
# log_main "$@"

set +x
