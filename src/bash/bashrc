#! /bin/bash -x

[[ -n $WELCOME_BYE ]] && echo Welcome to ~/.bashrc on $(hostname -f)

_set_path () {
    LOCAL=/usr/local
    [[ -d $LOCAL/gnu ]] && LOCALS="$LOCAL/gnu:$LOCAL/bin" || LOCALS="$LOCAL/bin"
    BINS=/usr/bin:/bin:/usr/sbin:/sbin
    HOMES=$HOME/bin:$HOME/.local
    export PATH=$LOCALS:$BINS:$HOMES
    export STDOUT=on
    export STDERR=on

    [[ -d $LOCAL/go/bin ]] && PATH=$PATH:$LOCAL/go/bin
}

_home_user=$HOME/$USER

local_rc () {
    local __doc__="There might be local files with new $PWD and commands"
    local _cd=$1; shift
    local _cdd=
    local _rcf=${BASH_RC:-_rc.sh}
    local _cdf=${BASH_CD:-_cd.in}
    [[ -f $_rcf ]] && _cdd=$(dirname $(readlink -f $_rcf))
    if [[ -f $_cdf ]]; then
        _cdd=$(dirname $(readlink -f $_cdf))
        _cd=$(cat $_cdf)
        rm -f $_cdf
    fi
    cd $_cd
    if [[ -f $_rcf ]]; then
        echo "-f "'$_rcf'"($_rcf)" >&2
        local _rc="$(cat $_rcf)"
        [[ -n $_rc ]] || echo "-z "'$_rc'"'$_rc'" >&2
        [[ -n $_rc ]] && eval $_rc
        echo "rm -f $_rcf" >&2
        rm -f $_rcf
    else
        echo "! -f "'$_rcf'"($_rcf)" >&2
    fi 2>/dev/null
}

_bashrc () {
    WELCOME_BYE=
    source $_home_user/__init__.sh
    WELCOME_BYE=
    local_rc
    export PS1="\$? [\u@\h:\$PWD]\n$ "
    sp
    # /usr/bin/say -v Moira I want a Slack bot, ..., that says the build channel &
    /usr/bin/say -v Anna Ich mÃ¶chte eine Maschine, die schreiben kann, wie ich kann &
}

vbb () {
    (cd $_home_user
    vim -p ~/.bashrc ~/jab/__init__.sh ~/bashrc.log "$@" +/bash
    ls -l ~/.bashrc ~/jab/__init__.sh ~/bashrc.log)
}

log_main () {
    set -x
    [[ $- =~ i ]] && main > ~/login.log 2>&1
    set +x
    vim ~/login.log +/environ.d.jab.sh
}

_local () {
    source_what $_home_user/local/bashrc optional
}

main () {
    _set_path
    _bashrc $_home_user
    _local
    set +m
}

# echo bashrc
main  "$@"
# log_main
[[ -n $WELCOME_BYE ]] && echo Bye from ~/.bashrc on $(hostname -f)
