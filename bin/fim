#! /bin/sh
#
# fim is a slight variation on vim
# 	It manipulates the command line for vim
#
test -f debugging && set -x


JAB_TESTING=$JAB/python/testing
edit_testers ()
{
	arg=$JAB_TESTING/$1
	if [[ -n $TRACKER_TESTING && -d $TRACKER_TESTING ]]
	then
		POST_PROCESSING="rsync -q --exclude=.svn $JAB_TESTING/* $TRACKER_TESTING/"
	fi
}

# Finish file names "left short" by tab-completion
# For example, if file name is "fred.", which does not exist, 
#     but "fred.py" does exist, then we'll edit fred.py
#
# Files "left short" by tab-completion are those which would have same stem, but different extension
# So we will complete for "*.py", "*.cpp"
POST_PROCESSING=
args=
for arg in $*
do
	if echo $arg | grep -q ^- 
	then
		args="$args $arg"
	elif [[ ! -f ${arg} && ${arg%%.} != $arg ]]
	then
		if [[ -f ${arg}py ]]
		then
			args="$args ${arg}py"
		elif [[ -f ${arg}cpp ]]
		then
			args="$args ${arg}cpp"
		else
			args="$args $arg"
		fi
	else
		if [[ `basename $arg` == "try.py" ]]
		then
			edit_testers try.py
		elif [[ `basename $arg` == "test_files.py" ]]
		then
			edit_testers test_files.py
		elif [[ `basename $arg` == "see.py" ]]
		then
			edit_testers see.py
		fi
		args="$args $arg"
	fi
done

# Recover any files which have corresponding swap files
safe=1
for file in $args
do
	if [[ ${file#+} != $file || ${file#-} != $file ]] 
	then
		continue
	fi
	cd `dirname $file`
	base=`basename $file`
	export swap_file=`$EDITOR -r 2>&1 | grep ^[0-9] | sed -e s/[0-9]\.\ *// -e s/.\$// | grep $base`
	cd - > /dev/null 2>&1
	swap_file=`dirname $file`/$swap_file
	if [[ -f "$swap_file" ]]
	then
		echo
		echo    A swap \ file \ exists: $swap_file
		echo " ps a |  grep -v -e grep -e \"\<$$\>\"| grep -q \"\<vim.*$file\" "
		if ps a |  grep -v -e grep -e "\<$$\>"| grep -q "\<vim.*$file"
		then
			echo -n A process is running:\ 
			ps a |  grep -v -e grep -e "\<$$\>"| grep "\<vim.*$file" 
			echo
			echo It is not safe to run \"$EDITOR $*\"
			safe=
		else
			echo Recovering $swap_file
			recovered_file="${file}.recovered"
			#
			# I use the "g:recovering" variable to prevent opening of extra tabs, YMMV
			#
			$EDITOR -r ${file} --cmd ":let g:recovering=1" -c"|:wq! ${recovered_file}" >/dev/null 2>&1
			/bin/rm -f $swap_file 
			if ! diff -q $file $recovered_file
			then
				$EDITOR -d $file $recovered_file
			fi
			/bin/rm -f $recovered_file
			break
		fi
	else
		if [[ ! -d $file ]]
		then
			if ps a |  grep -v -e grep -e "\<$$\>"| grep -q "\<vim.*$file"
			then
				echo    No swap \ file \ exists
				echo -n A process is running:\ 
				ps a |  grep -v -e grep -e "\<$$\>"| grep "\<vim.*$file" 
				safe=
			fi
		fi
	fi
done

if [[ -f debugging ]]
then
	if [[ -z $safe ]]
	then
		echo It was not safe to run \"$EDITOR $*\" anyway
	else
		echo "$EDITOR $args"
	fi
else
	if [[ -z $safe ]]
	then
		echo It is not safe to run \"$EDITOR $*\"
	else
		read -p"$EDITOR $args ? " reply
		if [[ -z $reply || $reply == "y" || $reply == "Y" ]]
		then
			$EDITOR $args
			$POST_PROCESSING
		fi
	fi
fi
exit 0
