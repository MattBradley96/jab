#! /bin/bash

# sst - run ssh from a terminal, and set titles to and from


PATH_TO_SCRIPT=$(readlink -f $BASH_SOURCE)

_expected=~/hub/what/what.sh; _actual="No $(basename $_expected)."; [[ -f "$_expected" ]] && _actual=$_expected;. $_actual
_expected=~/jab/environ.d/jab.sh; _actual="No $(basename $_expected)."; [[ -f "$_expected" ]] && _actual=$_expected;. $_actual
_expected=~/jab/src/bash/functons.sh; _actual="No $(basename $_expected)."; [[ -f "$_expected" ]] && _actual=$_expected;. $_actual

usage () {
    if [[ $# < 2 ]]; then
        if [[ $# == 1 ]]; then
            local _parts=$(echo $1 | tr '@' '\n' | wc -l)
            if [[ $_parts -ne 2 ]]; then
                echo "usage: $PATH_TO_SCRIPT <username> <server>" >&2
                exit 1
            fi
        fi
    fi
}

main () {
    local _parts=$(echo $1 | tr '@' '\n' | wc -l)
    local _remote_user=
    local _remote_server=
    if [[ $_parts -eq 2 ]]; then
        _remote_user=$(echo $1 | cut -d\@ -f 1)
        _remote_server=$(echo $1 | cut -d\@ -f 2)
        shift
    else
        local _remote_user=$1
        shift
        local _remote_server=$1
        shift
    fi
    local _options="$@"

    local _local_user=$USER
    local _local_server=`hostname -s`
    local _local_ip=$(python ~/jab/src/python/ifconfig.py 10 172 193 192 100)
    local _remote_ip=$(python -c "import socket; print socket.gethostbyname('$_remote_server')")
    if [[ $_local_ip == $_remote_ip ]]; then
        _local_user=$_remote_user
        if [[ $_remote_user == $(whoami) ]]; then
            echo "Here I am: $_remote_user@$_remote_server ($_remote_ip)" 2>&1
        else
            echo "Here is: $_remote_server ($_remote_ip)" >&2
            echo '  Perhaps you meant to use "$ su -u '$_local_user'"' >&2
        fi
        return
    fi
    local there_small=${_remote_server/.$EMPLOYER_DOMAIN/}
    console_title_on ${_remote_user}@${there_small} && \
        ssh -t -o ConnectTimeout=5 $_options $_remote_user@$_remote_server && \
        console_title_off ${_local_user}@${_local_server}
}

usage $*m
main $*
