#! /usr/bin/env python
"""Show some lines from files"""

from __future__ import print_function
import os
import sys
import argparse

from dotsite import text_streams


def parse_args():
    """Parse out command line arguments"""
    parser = argparse.ArgumentParser(description=__doc__.splitlines()[0])
    parser.add_argument('files', metavar='files', type=str, nargs='*',
                        help='files to edit')
    parser.add_argument('-a', '--at', type=int, default=None,
                        help='Show line at the line number')
    parser.add_argument('-c', '--clipboard', action='store_true',
                        help='Get lines from clipboard')
    parser.add_argument('-f', '--first', type=int, default=1,
                        help='number of first line to show')
    parser.add_argument('-l', '--last', type=int, default=0,
                        help=' number of last line to show')
    parser.add_argument('-n', '--numbers', action='store_true',
                        help='Show line numbers')
    return parser.parse_args()


def parse_lines(args, lines_read):

    def _line(i):
        line = i if i >= 0 else length_read + 1 + i
        if line >= length_read:
            return length_read
        return 0 if line < 1 else line

    def _boundaries():
        if not args.at:
            last = _line(args.last or -1)
            first = _line(args.first - 1)
            return first, last
        first = _line(args.at)
        return first, first + 1

    length_read = len(lines_read)
    first, last = _boundaries()
    lines = [] if first > length_read else lines_read[first:last]
    return lines, first


def line_format(lines):
    last_line_number = len(lines)
    digits = len(str(last_line_number))
    return '%%%dd: ' % digits


def show_stream(stream, args):
    text = stream.read()
    lines_in = text.splitlines()
    lines, first = parse_lines(args, lines_in)
    line_format_ = line_format(lines)
    for i, line in enumerate(lines, first):
        prefix = ''
        if args.numbers:
            prefix = line_format_ % (i + 1)
        out = ' '.join((prefix, line.rstrip()))
        print(out)


def main():
    """Run the script"""
    args = parse_args()
    for stream in text_streams.any():
        show_stream(stream, args)
    return os.EX_OK


if __name__ == '__main__':
    sys.exit(main())
