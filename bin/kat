#! /usr/bin/env python2
"""Show some lines from files"""

import os
import sys
import argparse

from dotsite import text_streams


def parse_args():
    """Parse out command line arguments"""
    parser = argparse.ArgumentParser(description=__doc__.splitlines()[0])
    parser.add_argument('files', metavar='files', type=str, nargs='*',
                        help='files to edit')
    parser.add_argument('-c', '--clipboard', action='store_true',
                        help='Get lines from clipboard')
    parser.add_argument('-f', '--first', type=int, default=0,
                        help='number of first line to show')
    parser.add_argument('-l', '--last', type=int, default=0,
                        help=' number of last line to show')
    parser.add_argument('-n', '--numbers', action='store_true',
                        help='Show line numbers')
    return parser.parse_args()


def show_stream(stream, args):
    all_lines = stream.readlines()
    start = args.first if args.first == 0 else args.first - 1
    last_line_number = args.last or len(all_lines)
    digits = len(str(last_line_number))
    line_format = '%%%dd: ' % digits
    lines = all_lines[start:args.last] if args.last else all_lines[start:]
    safe_start = start if start > -1 else len(all_lines) + start
    for i, line in enumerate(lines, safe_start):
        if args.numbers:
            print line_format % (i + 1),
        print line.rstrip()


def main():
    """Run the script"""
    args = parse_args()
    for stream in text_streams.file_streams(args.files, args.clipboard):
        show_stream(stream, args)
    return os.EX_OK


if __name__ == '__main__':
    sys.exit(main())
