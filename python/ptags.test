Testsing the ptags script
=========================

ptags is a script
	>>> import ptags
	>>> ptags.argv.test_args('-h')
	Usage: try.py [options]
	<BLANKLINE>
	Options:
	  -v, --verbose  Report disk changes
	  -h, --help     show this help message and exit

The read_file() method creates a list of tags for a python file
	>>> tags = ptags.read_file('ptags.py')
	>>> tags = tags[0:5]
	>>> show(tags)
	[<FileTag "ptags">,
	 <Tag "Tag">,
	 <Tag "FileTag">,
	 <Tag "best_of">,
	 <Tag "read_file">]

The tags_to_text() method converts those objects to ctags format
	>>> print ptags.tags_to_text(tags)
	FileTag	.../.jab/python/ptags.py	/^class +FileTag(/
	Tag	.../.jab/python/ptags.py	/^class +Tag:/
	best_of	.../.jab/python/ptags.py	/^def +best_of(/
	ptags	.../.jab/python/ptags.py	1
	read_file	.../.jab/python/ptags.py	/^def +read_file(/

Quick testing method to see all the directories for a list of tags
	>>> def show_dirs(tags):
	...     show( sorted(list(set([t.path.parent.from_home() for t in tags]))) )
	>>> show_dirs(tags)
	[<Path '.jab/python'>]

The read_dirs method gets tags for all python files in a directory
	It defaults to the current directory, and recurses into sub-dirs
	>>> tags = ptags.read_dirs()
	>>> show_dirs(tags)
	[<Path '.jab/python'>,
	 <Path '.jab/python/alanology'>,
	 <Path '.jab/python/ls'>,
	 <Path '.jab/python/new'>,
	 <Path '.jab/python/site'>]

The read_dir method does the same, but does not recurse
	>>> tags = ptags.read_dir()
	>>> show_dirs(tags)
	[<Path '.jab/python'>]

The tags are for all python files in the selected directory (ies)
	and for the given dir three of the scripts are programs
	>>> main_tags = [t for t in tags if 'main' in t.name]
	>>> print ptags.tags_to_text(main_tags)
	main	.../.jab/python/kd.py	/^def +main(/
	main	.../.jab/python/ptags.py	/^def +main(/
	main	.../.jab/python/try.py	/^def +main(/

Another method is used to read python's system direcories
	Which would, for example, tag the pformat method in the pprint module
	>>> show( [ t.path.name for t in ptags.read_sys_dirs() if t.name == 'pformat'] )
	['pprint.py']

