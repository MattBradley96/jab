The paths module
================

	>>> import sys
	>>> from pprint import pprint
	>>> import paths
	>>> paths.path('.').mp3_files()
	[]

paths reads from environ
	>>> import environ

And looks for paths therein
	It tries anything with a "/"
	>>> environ.EDITOR
	'/Users/jab/bin/vim'
	>>> paths.environ.EDITOR
	path('/Users/jab/bin/vim')

And not all are tried
	>>> print environ.HISTSIZ
	100000
	>>> print paths.environ.HISTSIZ
	Traceback (most recent call last):
	  ...
	AttributeError: paths instance has no attribute 'HISTSIZ'

Path lists are split up,
	>>> environ.PYTHONPATH 
	'...:...:'
	>>> len(paths.environ.PYTHONPATH) > 1 
	True

We use PYTHONPATH to get local directories into sys.path
	>>> strings = environ.PYTHONPATH.split(':')
	>>> strips = [ str(p) for p in paths.environ.PYTHONPATH ]
	>>> all( [ s in sys.path for s in strings ] )
	False
	>>> all( [ s in sys.path for s in strips ] )
	True

The paths module got into sys.path through $PYTHONPATH
	>>> path(paths.__file__).parent in paths.environ.PYTHONPATH
	True

Handy paths.attributes
----------------------

	>>> bashrc = paths.home / '.bashrc'
	>>> bashrc.isfile()
	True
