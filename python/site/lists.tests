	>>> import lists
	>>> lists.doublets([0,1,2,3])
	[[None, 0], [0, 1], [1, 2], [2, 3]] 
	>>> lists.doublets([0,1,2])
	[[None, 0], [0, 1], [1, 2]] 
	>>> lists.doublets([0,1])
	[[None, 0], [0, 1]] 
	>>> lists.doublets([0])
	[[None, 0]] 
	>>> lists.doublets([])
	[]
	>>> print lists.doublets(None)
	None
	>>> lists.triplets([0,1,2,3])
	[[None, 0, 1], [0, 1, 2], [1, 2, 3], [2, 3, None]]
	>>> lists.triplets([0,1,2])
	[[None, 0, 1], [0, 1, 2], [1, 2, None]]
	>>> lists.triplets([0,1])
	[[None, 0, 1], [0, 1, None]]
	>>> lists.triplets([0])
	[[None, 0, None]]
	>>> lists.triplets([])
	[]
	>>> print lists.triplets(None)
	None
	>>> def match(a,b): return not cmp(a,b)
	>>> lists.groups(match,[0,1,1,3,1])
	[[0], [1, 1], [3], [1]]
	>>> lists.groups(match,[0,1,1,3])
	[[0], [1, 1], [3]]
	>>> lists.groups(match,[0,1,1])
	[[0], [1, 1]]
	>>> lists.groups(match,[0,1])
	[[0], [1]]
	>>> lists.groups(match,[0])
	[[0]]
	>>> lists.groups(match,[])
	[]
	>>> print lists.groups(match,None)
	None
	>>> x = [ 5, 4, 3, 2, 1 ]
	>>> head, rest = lists.head_rest(x)
	>>> print head
	5 
	>>> print rest
	[4, 3, 2, 1]

	>>> lists.before(x,1)
	([5], [4, 3, 2, 1])

	>>> lists.before_and_after(x,0)
	([], [5], [4, 3, 2, 1])
	>>> lists.before_and_after(x,1)
	([5], [4], [3, 2, 1])
	>>> lists.before_and_after(x,2)
	([5, 4], [3], [2, 1])
	>>> lists.before_and_after(x,3)
	([5, 4, 3], [2], [1])
	>>> lists.before_and_after(x,4)
	([5, 4, 3, 2], [1], [])
	>>> lists.before_and_after(x,5)
	([5, 4, 3, 2, 1], [], [])
	>>> lists.before_and_after(x,6)
	([5, 4, 3, 2, 1], [], [])

	>>> lists.before_and_after('alan was here',4)
	('alan', ' ', 'was here')

	>>> for i,x in enumerate('alan'):
	...     print lists.before_and_after('alan',i)
	('', 'a', 'lan')
	('a', 'l', 'an')
	('al', 'a', 'n')
	('ala', 'n', '')
	
	>>> digits = [ 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]
	>>> i = None
	>>> a = None
	>>> b = digits[:]
	>>> while True:
	...     b, i, a = lists.take(b,i,a)
	...     print b,i,a
	...     if not a: break
	[] [9] [8, 7, 6, 5, 4, 3, 2, 1, 0]
	[9] [8] [7, 6, 5, 4, 3, 2, 1, 0]
	[9, 8] [7] [6, 5, 4, 3, 2, 1, 0]
	[9, 8, 7] [6] [5, 4, 3, 2, 1, 0]
	[9, 8, 7, 6] [5] [4, 3, 2, 1, 0]
	[9, 8, 7, 6, 5] [4] [3, 2, 1, 0]
	[9, 8, 7, 6, 5, 4] [3] [2, 1, 0]
	[9, 8, 7, 6, 5, 4, 3] [2] [1, 0]
	[9, 8, 7, 6, 5, 4, 3, 2] [1] [0]
	[9, 8, 7, 6, 5, 4, 3, 2, 1] [0] []

Can change the list in passing
Especially - can change thes size of the parts

	>>> i = None
	>>> a = None
	>>> b = digits[:]
	>>> while True:
	...     b, i, a = lists.take(b,i,a)
	...     b, i, a = b + i, a[:1], a[1:-1]
	...     print b,i,a
	...     if not i: break
	[9] [8] [7, 6, 5, 4, 3, 2, 1]
	[9, 8, 7] [6] [5, 4, 3, 2]
	[9, 8, 7, 6, 5] [4] [3]
	[9, 8, 7, 6, 5, 4, 3] [] []
