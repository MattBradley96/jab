The analogy module
==================

	>>> import analogy 

Dog food time
	>>> analogy_grammar = analogy.module_grammar(analogy)
	>>> string = analogy.string_to_list(analogy_grammar)

Our grammar starts off looking like this
	>>> print string
	is is a verb
	A is a noun

Which is stored in a string
	>>> string
	<string 'is is a verb
	A is a noun
	'>

Which is made up of letters and stuff
	>>> print string.to_str(0,3)
	[<lower 'i'>, <lower 's'>, <space ' '>]

Group them by their class
	And convert the groups to strings with plural names
	>>> lyst = analogy.lysted( string )
	>>> show( lyst[0:7] )
	[<lowers 'is'>,
	 <spaces ' '>,
	 <lowers 'is'>,
	 <spaces ' '>,
	 <lowers 'a'>,
	 <spaces ' '>,
	 <lowers 'verb'>]

	>>> lyst = analogy.wordied( lyst )
	>>> show( lyst[0:7] )
	[<word 'is'>,
	 <word 'is'>,
	 <word 'a'>,
	 <word 'verb'>,
	 <word 'A'>]]

	>>> lyst = analogy.classed( lyst )
	>>> show( lyst[0:7] )
	[[<word 'is'>, <word 'is'>, <word 'a'>, <word 'verb'>],
	 [<uppers 'A'>],
	 [<spaces ' '>],
	 [<word 'is'>, <word 'a'>],
	 [<lowers 'word'>]]
	>>> lyst = analogy.pluralled( lyst )
	>>> show( lyst[0:7] )
	[<words 'isisaverb'>,
	 <upperss 'A'>,
	 <spacess ' '>,
	 <words 'isa'>,
	 <lowerss 'word'>]
