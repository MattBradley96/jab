The analogy module
==================

	>>> import analogy 

Dog food time
	>>> analogy_grammar = analogy.module_grammar(analogy)
	>>> string = analogy.string_to_list(analogy_grammar)

Our grammar starts off looking like this
	>>> print string
	is is a verb
	verb is a noun

Which is stored in a string
	>>> string
	<string 'is is a verb
	verb is a noun
	'>

Which is made up of letters and stuff
	>>> print string.to_str(0,3)
	[<lower 'i'>, <lower 's'>, <space ' '>]

Group them by their class
	And convert the groups to strings with plural names
	>>> lyst = analogy.lysted( string )
	>>> show( lyst[0:4] )
	[<lowers 'is'>, <spaces ' '>, <lowers 'is'>, <spaces ' '>]

	>>> lyst = analogy.worded( lyst )
	>>> show( lyst[0:4] )
	[<word 'is'>, <word 'is'>, <word 'a'>, <word 'verb'>]

	>>> lyst = analogy.lysted( lyst )
	>>> show( lyst[0:4] )
	[<words [<word 'is'>, <word 'is'>, <word 'a'>, <word 'verb'>]>,
	 <eols [<eols '
	'>]>,
	 <words [<word 'verb'>, <word 'is'>, <word 'a'>, <word 'noun'>]>]

	>>> lyst = analogy.sentenced( lyst )
	>>> show( lyst[0:4] )
	[<sentence [<word 'is'>, <word 'is'>, <word 'a'>, <word 'verb'>]>]
