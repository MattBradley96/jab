The doctests module
===================

This script handles collections of files used for doctests
	>>> import doctests

	>>> import files

Here's one I made earlier
	>>> earlier_name = 'made_earlier.test'
	>>> files.write_failing_test(earlier_name)

Which looks like this
	>>> files.looks_like_this(earlier_name)
	 0: Test Me
	 1: =======
	 2: 	>>> print 1
	 3: 	>>> print 2
	 4: 	3
	 5: 	>>> print 1 / 0
	 6: 	>>> print 0

Run that test through doctest to generate some failures
	>>> files.test_file(earlier_name)
	True

Parse the files
	>>> test_file, tests_file, fail_file = doctests.parse_files('made_earlier')

We call the fix method for the fail file
	>>> doctests.fix_file(test_file, fail_file)

And that should update the test file
	so that it now has passing tests
	>>> files.looks_like_this('made_earlier.test')
	 0: Test Me
	 1: =======
	 2: 	>>> print 1
	 3: 	1
	 4: 	>>> print 2
	 5: 	2
	 6: 	>>> print 1 / 0
	 7: 	Traceback (most recent call last):
	 8: 	...
	 9: 	ZeroDivisionError: integer division or modulo by zero
	10: 	>>> print 0
	11: 	0

Re-test the file, should produce no failures
	>>> files.test_file(earlier_name)
	True

	>>> files.looks_like_this('made_earlier.fail')

Clean up
--------

The fix_file() method wrote out a backup file
	>>> _ = bash('mv made_earlier.test~ made_earlier.test')
