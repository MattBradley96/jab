lx
==

	>>> import lx

We know these files exist
	>>> this_python_file = path('lx.py')
	>>> this_test_file = path('lx.test')
	>>> this_tests_file = path('lx.tests')
	>>> these_files = this_python_file, this_test_file, this_tests_file

get_exts
--------

	>>> here = lx.get_dirs()
	>>> files_here = lx.get_files(here)

The get_exts() method turns the list of files into a dictionary 
	>>> files_by_extension = lx.get_exts(files_here)

Keyed by the extensions of the files
	So the extension of this file should show up
	>>> '.test' in files_by_extension
	True

And values are a list of file paths,
	so these files should be separated by extension
	>>> this_test_file in files_by_extension['.test']
	True
	>>> this_python_file in files_by_extension['.py']
	True
	>>> this_tests_file in files_by_extension['.tests']
	True

Despite best intentions there's always more python files than test files
	And this directory should be "mature" by now
	>>> 21 < len(files_by_extension['.test']) <= len(files_by_extension['.py']) > 21
	True

	>>> files_in_the_home_directory = lx.get_files(lx.get_dirs('~'))

Special rule for dot files: 
	they are all lumped together under the ext "."
	>>> hidden_home_files = lx.get_exts(files_in_the_home_directory)['.']

And I expect one of the hidden files in the home directory to be called
	>>> '.bashrc' in [ f.name for f in hidden_home_files ]
	True
