The glob_path module
====================

	>>> import glob_path
	>>> import l
	>>> from path import cd
	>>> cd(glob_path.__file__)
	True 

The module provides a class,
	which is like a path, except it allows wild cards

	>>> gp = glob_path.glob_path('glob_path.*[yt]')
	>>> print gp
	./glob_path.*[yt]
	>>> gp
	<glob_path ./glob_path.*[yt]>

The path exists if there are any matches
	>>> gp.exists()
	True
	>>> glob_path.glob_path('you would never call a file this.*').exists()
	False

Acts like a directory path
	>>> files = sorted( gp.files() )

Remove temporary files
	>>> files = [ f for f in files if not f.endswith('~') ]
	>>> files = [ f for f in files if not f.endswith('pyc') ]
	>>> files = [ f for f in files if not f.endswith('fail') ]
	>>> files = sorted( gp.files() )
	>>> show( files )
	[<path './glob_path.py'>, <path './glob_path.test'>]
