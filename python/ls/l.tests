The l module
============

	>>> import l

	>>> l.as_paths('fred')
	[<path 'fred'>]

	>>> l.as_paths()
	[]

	>>> l.as_paths(path('.'))
	[<path '.'>]

	>>> l.as_paths([ 'fred', path('.') ])
	[<path 'fred'>, <path '.'>]

	>>> l.as_paths([ 'fred', 999, path('.') ])
	Traceback (most recent call last):
	...
	NotImplementedError: Cannot convert 999 to a path

	>>> sources = [ '*.c', '*.py' ]
	>>> files = [ path('fred.py'), path('fred.py~'), path('fred.pyc'),
	...           path('mary.py'), path('alan.txt')]
	>>> l.remove_ignored(files,sources) == l.remove_ignored(files,ignores=sources)
	True

	>>> args = [ '~/.jab/python/ls' ]
	>>> from path import cd
	>>> cd(args[0])
	True
	>>> dirs = l.get_dirs(args)
	>>> show( [p.name for p in dirs] )
	['ls']
	>>> files = l.get_files(dirs)
	>>> show( [f.name for f in files if not f.ext == '.fail'][-6:] )
	['lx.test', 'lx.tests', 'ly.py', 'ly.pyc', 'ly.test', 'tags']
	>>> files = l.remove_ignored(files,extra_ignores=['*.fail'])
	>>> show( [p.name for p in files][-6:] )
	['lout.test', 'lx.py', 'lx.test', 'lx.tests', 'ly.py', 'ly.test']
	>>> names = l.get_names(files)
	>>> show( names )
	{'glob_path': [<path 'glob_path.py'>, <path 'glob_path.test'>],
	 'l': [<path 'l.py'>, <path 'l.test'>, <path 'l.tests'>],
	 'lout': [<path 'lout.py'>, <path 'lout.test'>],
	 'lx': [<path 'lx.py'>, <path 'lx.test'>, <path 'lx.tests'>],
	 'ly': [<path 'ly.py'>, <path 'ly.test'>]}
